name: .NET Code Coverage
permissions:
  contents: write
  pull-requests: write
on:
  push:
    branches: [ main, develop, release ]
  pull_request:
    branches: [ main, develop, release ]

jobs:
  BuildAndTestWithCoverage:
    runs-on: ubuntu-latest
    env:
      thresholds: '60 80'
    steps:
      - name: Wait for report to be built
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          check-name: 'Build Report'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
          dotnet-quality: 'ga'

      - name: Restore dependencies
        run: dotnet restore

      - name: Restore tools
        run: dotnet tool restore

      - name: Build .NET
        run: dotnet build --no-restore

      - name: Install playwright
        run: dotnet pwsh test/Chirp.WebService.Tests/bin/Debug/net7.0/playwright.ps1 install

      - name: Open Web Client Directory
        working-directory: .
        run: |
          ls -la
        
      - name: Test With Coverage
        run: dotnet dotcover test --dcXML=dotcoverConfig.xml

      - name: Report Generator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.1.26
        with:
          reports: analysis.xml
          targetdir: coverage
          reporttypes: Cobertura
          verbosity: 'Info'

      - name: Build Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: 'coverage/Cobertura.xml'
          badge: true
          format: markdown
          hide_branch_rate: true
          hide_complexity: true
          indicators: true
          output: both
          thresholds: ${{ env.thresholds }}

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2.8.0
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Write to Job Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

      - name: Test Check Failure of Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: 'coverage/Cobertura.xml'
          fail_below_min: true
          thresholds: ${{ env.thresholds }}